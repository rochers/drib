#!/usr/bin/env perl
#
#  drib configure
# =================================
#  (c) Copyright Travis Kuhl 2009-10
#  
#
# This is free software. You may redistribute copies of it under the terms of
# the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
# There is NO WARRANTY, to the extent permitted by law.
#

# depend
my @depend = (
	"LWP",
	"Digest::SHA",
	"ExtUtils::MakeMaker",
	"YAML",	
	"File::Basename",
	"File::Find",
	"Digest::MD5",
	"JSON",
	"HTTP::Request",
	"Net::SSH::Expect",
	"Net::SCP::Expect",
	"Getopt::Lucid",
	
	#"Crypt::CBC",	# will be used later
);

# get opts
use Getopt::Long;
use CPAN;

# start
print "Starting...\n";

# cwd
my $pwd = `pwd`;

# cpan
_setup_cpan();

	# we need them to be using the correct 
	# cpan version
	if ( $CPAN::VERSION < 1.9402 ) {
		
		print ('-'x50)."\n";
		print "Your version of CPAN (".$CPAN::VERSION.") is out-of-date.\n";
		print "In order to continue, we're going to try updating it for you.\n";
		print "A bunch of shit is going to scroll across the screen. Don't\n";
		print "be alarmed. It's very normal. Don't take it personally. Should there\n";
		print "be any problems, try installing manually using this commands:\n\n";
		print "  perl -MCPAN -e 'install Bundle::CPAN'\n\n";
		print "This process may take a few minutes.\n";		
		print ('-'x50)."\n\n";

		# install cpan
		CPAN::Shell->install("CPAN");

		print "\n".('-'x50)."\n";
		print "CPAN upgrade complete.\nPlease run ./configure again!\n\n\n";

		exit();
	
	}

# vars
my $bin = "/usr/local/bin", 
   $var = "/var/drib", 
   $tmp = "/tmp/drib";

# opts
my $opts =  GetOptions (
				"bin=s" => \$bin
			);
			
# set lib
my $lib = "$bin/../lib";

# make our dirs
mkdir($tmp); mkdir($var);

# vars
my $args = " --install --cleanup --var src=../src --var bin=$bin --var lib=$lib";

# print 
print "Building Makefile\n";

# write our makefile
open(MF, ">./Makefile");

# print it 
print MF "DRIB=./src/bin/drib\n";
print MF "all:\n";
print MF '	@$(DRIB) --check-install --bin='.$bin."\n\n";
print MF "install:\n";
print MF '	@$(DRIB) create pkg/drib.dpf '.$args."\n\n";
print MF "symlink:\n";
print MF '	@$(DRIB) create pkg/drib.dpf '.$args.' --type=symlink';

# close
close(MF);

# checking
print ('-'x50)."\n";
print "\nChecking for required CPAN Modules...\n";

# test the deps
foreach my $mod ( @depend ) {
	
	# test
	eval("use $mod");

	# if no try to install
	if ( $@ ) {
		CPAN::Shell->notest('install', $mod);
	}

} 

# done
print "CPAN check complete\n" . ('-'x50)."\n";

# move back
chdir($pwd);

# done
print "Completed configuration and bootstraping!\n";
print "To complete installation, run:\n";
print " make\n";
print " sudo make install\n\n";
	
# The Initial Developer of the Original Code is Everything Solved.
# Portions created by Everything Solved are Copyright (C) 2006
# Everything Solved. All Rights Reserved.
sub _setup_cpan {

	# cpan home
	my $dir = $CPAN::Config->{cpan_home};	
	
		# need dir	
	    if (!defined $dir || !-w $dir) {
	        $dir = "$ENV{HOME}/.cpan";
	        mkdir $dir;	
		}	
	
	# set 
	$CPAN::Config->{cpan_home} = $dir;
	$CPAN::Config->{build_dir} = "$dir/build";
	$CPAN::Config->{keep_source_where} = "$dir/source";
	$CPAN::Config->{inhibit_startup_message} = 1;
	$CPAN::Config->{prerequisites_policy} = 'follow';
	$CPAN::Config->{histfile} = "$dir/histfile";
	$CPAN::Config->{use_sqlite} = 0;
	$CPAN::Config->{prefs_dir} = "$dir/prefs";	
	$CPAN::Config->{make_test} = "NO";
	
	# default
	my $default = {
	    auto_commit => 0,
	    build_cache => 0,
	    build_requires_install_policy => 'yes',
	    cache_metadata => 1,
	    colorize_output => 1,
	    colorize_print => 'bold',
	    index_expire => 1,
	    scan_cache => 'atstart',
	    inhibit_startup_message => 1,
	    bzip2 => bin_loc('bzip2'),
	    curl => bin_loc('curl'),
	    gzip => bin_loc('gzip'),
	    links => bin_loc('links'),
	    lynx => bin_loc('lynx'),
	    make => bin_loc('make'),
	    pager => bin_loc('less'),
	    tar => bin_loc('tar'),
	    unzip => bin_loc('unzip'),
	    wget => bin_loc('wget'),
	    urllist => [qw(
	    	http://www.cpan.org/
	        http://cpan.pair.com/
	        http://mirror.hiwaay.net/CPAN/
	        ftp://ftp.dc.aleron.net/pub/CPAN/
	        http://mirrors.kernel.org/cpan/
	        http://mirrors2.kernel.org/cpan/)]
	};
	
	# loop
	foreach my $key ( keys %{$default} ) {
		$CPAN::Config->{$key} = $default->{$key};
	}

    my @missing;
    # In newer CPANs, this is in HandleConfig. In older CPANs, it's in
    # Config.
    if (eval { require CPAN::HandleConfig }) {
        @missing = CPAN::HandleConfig->missing_config_data;
    }
    else {
        @missing = CPAN::Config->missing_config_data;
    }

    foreach my $key (@missing) {
        $CPAN::Config->{$key} = '';
    }
		
}


# locate bin files
sub bin_loc {
    my ($bin) = @_;
    open(my $saveerr, ">&STDERR");
    open(STDERR, '>/dev/null');
    my $loc = `which $bin`;
    close(STDERR);
    open(STDERR, ">&", $saveerr);
    my $exit_code = $? >> 8; # See the perlvar manpage.
    return '' if $exit_code > 0;
    chomp($loc);
    return $loc;
}